# Ingress by Gateway API

---
#https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1alpha2.TLSRoute
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: edge2internal
  namespace: {{ .Release.Namespace }}
  # Description: gateway to edge->internal

spec:
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: edge
    namespace: {{ include "gateways.namespace" . }}

  hostnames:
{{- range $domain:=.Values.ingress.domains }}
  - "*.{{ $domain }}"
{{- end }}
  rules:
  - backendRefs: 
    - kind: Service
      ## TODO: how does ist this created?? Auto-provisionining doesn't allow to control the name!!
      ## https://istio.io/latest/docs/tasks/traffic-management/ingress/gateway-api/#automated-deployment
      ## maybe create a test??
      #
      #name: envoy-internal
      name: internal-default-internal 
      port: 443

    # not allowed!! Could be enhancement!!
    # - name: envoy-internal 
    #   group: gateway.networking.k8s.io
    #   kind: Gateway
    #   port: 443

{{ if .Values.workload.contourLegacy.enabled }}
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: internal2contour-legacy
  namespace: {{ .Release.Namespace }}
  # Description: gateway to internal->legacy

spec:
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: internal # upstream gateway
    namespace: {{ include "gateways.namespace" . }}

  hostnames:
{{- range $domain:=.Values.ingress.domains }}
  - "*.{{ $domain }}"
{{- end }}
  rules:
  - backendRefs: 
    - kind: Service
      name: envoy-contour-legacy # donstream gateway  
      port: 443
{{ end }}