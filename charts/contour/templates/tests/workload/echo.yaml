{{ if .Values.test.enabled }}
---
kind: HTTPRoute
apiVersion: gateway.networking.k8s.io/v1
metadata:
  name: echo-http
  labels:
    app: echo
spec:
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: contour
    namespace: projectcontour
  hostnames:
  - "echo.projectcontour.io" # fixed for wired tests
{{- range $domain:=.Values.ingress.domains }}
  - "echo.{{ $domain }}"
{{- end }}

  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - kind: Service
      name: echo
      port: 80
# ---
# kind: HTTPRoute
# apiVersion: gateway.networking.k8s.io/v1
# metadata:
#   name: echo-https
#   labels:
#     app: echo
# spec:
#   parentRefs:
#   - group: gateway.networking.k8s.io
#     kind: Gateway
#     name: contour
#     namespace: projectcontour
#   hostnames:
#   - "echo-https.projectcontour.io" # fixed for wired tests
# {{- range $domain:=.Values.ingress.domains }}
#   - "echo-https.{{ $domain }}"
# {{- end }}

#   rules:
#   - matches:
#     - path:
#         type: PathPrefix
#         value: /
#     backendRefs:
#     - kind: Service
#       name: echo
#       port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: echo
  namespace: {{ .Release.Namespace }}
  labels:
    app: echo
spec:
  selector:
    app: echo
  type: ClusterIP
  ports:
    # - name: http-nginx
    #   protocol: TCP
    #   port: 80
    #   targetPort: 80
    - name: http-echo 
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: https-echo 
      protocol: TCP
      port: 443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo
  namespace: {{ .Release.Namespace }}
  labels:
    app: echo
  annotations:
    foo: bar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      labels:
        app: echo
    spec:
      terminationGracePeriodSeconds: 2

      volumes:
      - name: tls-secret
        secret:
          secretName: default-tls-cert

      containers:

      #  https://github.com/mendhak/docker-http-https-echo#decode-jwt-header
      - name: http-https-echo
        image: ghcr.io/mendhak/http-https-echo:33
        env:
        - name: HTTP_PORT
          value: "8080"
        - name: HTTPS_PORT
          value: "8443"
        - name: MTLS_ENABLE
          value: "1"
        - name: HTTPS_CERT_FILE
          value: /app/tls/tls.crt
        - name: HTTPS_KEY_FILE
          value: /app/tls/tls.key

        ports:
        - containerPort: 8080
        - containerPort: 8443
      
        volumeMounts:
        - name: tls-secret
          readOnly: true
          mountPath: /app/tls

        # - /etc/ssl/certs/ssl-cert-snakeoil.pem:/app/fullchain.pem
        # - /etc/ssl/private/ssl-cert-snakeoil.key:/app/privkey.pem


{{ end }}